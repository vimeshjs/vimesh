<el-form :model="form" ref="form" :rules="rules" label-width="100px" style="width: 460px;">
    <el-form-item :label="i18n.id" prop="_id" v-if="!editMode">
        <el-input v-model="form._id" ></el-input>
    </el-form-item>
    <el-form-item :label="i18n.name" prop="name">
        <el-input v-model="form.name" ></el-input>
    </el-form-item>
    <el-form-item :label="i18n.email" prop="email">
        <el-input type='email' v-model="form.email" ></el-input>
    </el-form-item>
    <el-form-item :label="i18n.mobile" prop="mobile">
        <el-input v-model="form.mobile" ></el-input>
    </el-form-item>
    <el-form-item>
        <el-button type="primary" @click="submitForm()">\{{i18n.submit}}</el-button>
        <el-button @click="resetForm()">\{{i18n.reset}}</el-button>
    </el-form-item>
</el-form>
<script>
    let $form = {{{ json form }}}
    let $i18n = {{{ json i18n }}}
    $mixins.push({
        data() {
            return {
                editMode: !!$form._id,
                form: $form,
                i18n: $i18n,
                rules: {
                    _id: [
                        { required: true, message: $i18n.err_required.replace(/@prop@/i, $i18n.id) }
                    ],
                    name: [
                        { required: true, message: $i18n.err_name_required }
                    ]
                }
            }
        },
        methods: {
            submitForm() {
                let self = this
                this.$refs.form.validate((valid) => {
                    if (valid) {
                        axios.post('/@account/users/edit', { form: self.form, editMode: self.editMode }).then(function (r) {
                            self.$message.success(r.data.message)
                            setTimeout(function () { goto('/@account/users') }, 2000)
                        }).catch(function (r) {
                            self.$message.error(r.response.data.message)
                        })
                    } else {
                        return false;
                    }
                });
            },
            resetForm() {
                this.$refs.form.resetFields();
            }
        }
    })
</script>